<UserControl
        x:Class="Medo.Modules.CardEditorModule.Views.ViewCardEditorModule"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:behaviors="clr-namespace:Medo.Modules.CardEditorModule.Behaviors"
        xmlns:collections="clr-namespace:Medo.Client.Collections;assembly=Medo.Client.Collections"
        xmlns:static="clr-namespace:Medo.Modules.CardEditorModule"
        xmlns:sbox="clr-namespace:Medo.Modules.SelectBox;assembly=SelectBox"
        xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
        MaxWidth="500"
        prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Medo.Core;component/ErrorsValidation/ErrorsTemplate.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Medo.Core;component/Resources/Button.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Medo.Core;component/Converters.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/CardEditorModule;component/Resources/Colors.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Medo.ImageResources;component/PNGResourceDictionary.xaml"/>

            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="mainGrid">

        <StackPanel Orientation="Vertical" Grid.Column="0" Margin="35,0">
            <TextBlock Text="Принявший орган" HorizontalAlignment="Center" FontSize="15"/>
            <sbox:ViewIncrementSelectBox ItemsCollection="{Binding Path=(collections:StaticCollections.OrganList), Mode=OneWay, NotifyOnSourceUpdated=True}"
                                         SelectedItem="{Binding OrganName, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}"
                                         Validation.ErrorTemplate="{StaticResource MultiValidationTemplate}"/>

            <TextBlock Text="Вид документа" HorizontalAlignment="Center" FontSize="15"/>
            <sbox:ViewIncrementSelectBox ItemsCollection="{Binding Path=(collections:StaticCollections.TypeList), Mode=OneWay, NotifyOnSourceUpdated=True}"
                                         SelectedOrgan="{Binding OrganName, Mode=OneWay}"
                                         SelectedItem="{Binding ActType, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}"
                                         
                                         Validation.ErrorTemplate="{StaticResource MultiValidationTemplate}"/>


            <TextBlock Text="Наименование документа" HorizontalAlignment="Center" FontSize="15"/>

            <StackPanel Orientation="Vertical">
                <Grid Height="25">
                    <Button Margin="2,0,0,0"
                            HorizontalAlignment="Left"
                            Command="{Binding ReloadRecognitionDictionaryCommand}"
                            ToolTip="Перезагрузить словарь замен">
                        <Image Source="{StaticResource MedoClientRefreshIcon}"/>
                    </Button>

                    <Button Margin="40,0,0,0"
                            HorizontalAlignment="Left"
                            Command="{Binding TextToLowerCaseCommand}"
                            ToolTip="Перевести текст в нижний регистр">
                        <Image Source="{StaticResource MedoClientLowRegistryIcon}"/>
                    </Button>
                    <Button ToolTip="Стереть наименование документа"
                            Command="{Binding ClearTextCommand}"
                            HorizontalAlignment="Right"
                            Margin="2,0,0,0">
                        <Image Source="{StaticResource MedoClientClearIcon}"/>
                    </Button>
                </Grid>
                <avalon:TextEditor WordWrap="True"
                                   FontSize="16"
                                   MinHeight="100"
                                   MaxHeight="300" 
                                   Foreground="Red"
                                   FontWeight="Normal">
                    <i:Interaction.Behaviors>
                        <behaviors:AvalonBehavior DocumentText="{Binding DocumentText, Mode=TwoWay, ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}" 
                                                  SelectedText="{Binding SelectedWord, Mode=TwoWay}"/>
                    </i:Interaction.Behaviors>
                </avalon:TextEditor>
                <TextBox metro:TextBoxHelper.Watermark="Коментарий к документу..." Text="{Binding Comments, Mode=TwoWay}"/>
            </StackPanel>


            <StackPanel>
                <TextBlock Text="Номер документа" HorizontalAlignment="Center" FontSize="15"/>
                <TextBox x:Name="changedNumberTextBox"
                         Text="{Binding ChangedNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="16"
                         Validation.ErrorTemplate="{StaticResource MultiValidationTemplate}"
                         metro:TextBoxHelper.ClearTextButton="True"
                         Visibility="{Binding MIDNumberEnabled}"/>
            </StackPanel>

            <StackPanel>
                <TextBlock Text="Дата подписания документа" HorizontalAlignment="Center" FontSize="15"/>
                <DatePicker x:Name="signDateCal" 
                            DisplayDate="{Binding SignDate, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"
                            SelectedDate="{Binding SignDate, Mode=TwoWay,ValidatesOnNotifyDataErrors=True, NotifyOnValidationError=True}"
                            Text="{Binding SignDate, StringFormat={}{0:dd.MM.yyyy}}"
                            FontSize="15"
                            Validation.ErrorTemplate="{StaticResource MultiValidationTemplateForDatePicker}"/>
            </StackPanel>

            <StackPanel x:Name="MJNumberAndDateStackPanel">

                <StackPanel>
                    <TextBlock Text="Номер регистрации в Минюсте" HorizontalAlignment="Center" FontSize="15"/>
                    <TextBox FontSize="15"
                             TextWrapping="Wrap"
                             Text="{Binding MJNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Background="Transparent"
                             metro:TextBoxHelper.ClearTextButton="True"
                             Validation.ErrorTemplate="{StaticResource MultiValidationTemplate}"/>
                </StackPanel>

                <StackPanel  x:Name="mjFieldsStackPanel">
                    <TextBlock Text="Дата регистрации в Минюсте" HorizontalAlignment="Center" FontSize="15"/>
                    <DatePicker DisplayDate="{Binding MJDate, Mode=TwoWay}"
                                SelectedDate="{Binding MJDate, Mode=TwoWay}"
                                Background="Transparent"
                                Text="{Binding MJDate, StringFormat={}{0:dd.MM.yyyy}}"
                                FontSize="15"
                                Margin="0,5,0,0"
                                Validation.ErrorTemplate="{StaticResource MultiValidationTemplateForDatePicker}"/>
                </StackPanel>
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">

                        <Setter Property="Opacity" Value="0.5"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsMJDocument}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>
            <!--Дата отметки минюста о признании документа не нуждающимся в регистрации (пока не работает)-->
            <StackPanel x:Name="registerNotAllowedStackPanel">
                <TextBlock Text="Не нуждается в регистрации" HorizontalAlignment="Center" FontSize="15"/>
                <DatePicker DisplayDate="{Binding MJDate, Mode=TwoWay}"
                                SelectedDate="{Binding MJDate, Mode=TwoWay}"
                                Background="White"
                                Text="{Binding MJDate, StringFormat={}{0:dd.MM.yyyy}}"
                                FontSize="15"
                                Margin="0,5,0,0"
                                Foreground="{Binding ElementName=CardEditorFlyOut, Path=Foreground}"
                                Validation.ErrorTemplate="{StaticResource MultiValidationTemplateForDatePicker}"/>
                <StackPanel.Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsRegisterNotAllowed}" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
            </StackPanel>

            <StackPanel x:Name="StopPublicationStackPanel">
                <TextBlock Text="Задержать опубликование" HorizontalAlignment="Center" FontSize="15"/>
                <DatePicker DisplayDate="{Binding DefferedOpen, Mode=TwoWay}"
                                SelectedDate="{Binding DefferedOpen, Mode=TwoWay}"
                                Background="White"
                                Text="{Binding DefferedOpen, StringFormat={}{0:dd.MM.yyyy}}"
                                FontSize="15"
                                Margin="0,5,0,0"                               
                                Validation.ErrorTemplate="{StaticResource MultiValidationTemplateForDatePicker}"/>
            </StackPanel>





            <Grid Margin="0,0,0,10">
                <Button Panel.ZIndex="2" 
                        Content="Сохранить"
                        Margin="0,20,0,1"
                        Command="{Binding SaveCardCommand}"
                        FontSize="15" BorderThickness="0"
                        Background="{Binding ElementName=cardWindow, Path=BorderBrush}"
                        Height="40">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CriticalErrorsCount}" Value="0">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Grid>
                    <metro:MetroProgressBar x:Name="ReqProgress"
                                            Maximum="{Binding RequsitsCount}"
                                            Value="{Binding ErrorsProgressBarValue}"
                                            Foreground="{StaticResource ErrorsProgressBarForegroundColor}"
                                            Width="{Binding ElementName=SaveButton, Path=ActualWidth}"
                                            Height="40"
                                            Background="#59FF0000"
                                            Margin="0,20,0,1">
                        <metro:MetroProgressBar.Effect>
                            <BlurEffect Radius="10"/>
                        </metro:MetroProgressBar.Effect>
                    </metro:MetroProgressBar>

                    <TextBlock Text="{Binding CriticalErrorsCount, StringFormat='Осталось заполнить реквизитов: {0}'}"
                               Panel.ZIndex="1"
                               HorizontalAlignment="Center"
                               FontSize="14"/>
                </Grid>
            </Grid>
        </StackPanel>

        <metro:Flyout x:Name="SpellCheckFlyOut"
                      Header="{Binding SelectedWord.Word}"
                      Panel.ZIndex="9"
                      Opacity="0.9"
                      Position="Right"
                      IsOpen="{Binding SpellCheckPanelIsOpen, Mode=TwoWay}"
                      MaxHeight="{Binding ElementName=mainGrid, Path=ActualHeight}"
                      IsModal="True">
            <Grid Margin="0,0,0,5">
                <ListBox x:Name="ContextMenuListBox"
                         Margin="0,5,0,60"
                         FontFamily="Calibri"
                         FontSize="16"
                         ItemsSource="{Binding WordsCollectionAfterLevT}"
                         SelectedItem="{Binding SpellCheckerSelectedWord, Mode=TwoWay}"
                         SelectedIndex="{Binding SpellCheckerSelectedIndex, Mode=TwoWay}">
                    <ListBox.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFAD54"/>
                    </ListBox.Resources>
                </ListBox>
                <TextBlock x:Name="spell"
                         Text="{Binding SpellCheckerSelectedWord}"
                         FontWeight="Bold"
                         FontSize="16"
                         Foreground="Black"
                         VerticalAlignment="Bottom" Margin="0,0,0,30">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding WordIsAddToDictionary}" Value="true">
                                    <Setter Property="Background" Value="#FFFF9898"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding WordIsAddToDictionary}" Value="false">
                                    <Setter Property="Background" Value="#FF97F097"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Grid VerticalAlignment="Bottom">
                    <Button Command="{Binding AddToDictionaryOrChangeSelectWordCommand}">
                        <TextBlock FontFamily="Calibri" FontSize="16" Foreground="#FF191D16">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="Принять"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding WordIsAddToDictionary}" Value="true">
                                            <Setter Property="Text" Value="Добавить"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WordIsAddToDictionary}" Value="true">
                                        <Setter Property="Background" Value="#FFFF9898"/>
                                        <Setter Property="ToolTip" Value="Данное слово отсуствует в словаре, при нажатии кнопки оно будет добавлено в словарь."/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WordIsAddToDictionary}" Value="false">
                                        <Setter Property="Background" Value="#FF97F097"/>
                                        <Setter Property="ToolTip" Value="Заменить выбранное слово."/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Grid>
        </metro:Flyout>

    </Grid>
</UserControl>
